{"version":3,"sources":["components/Header.js","components/CurrenciesNameList.js","components/ActiveCurrency.js","components/Main.js","components/SavesCurrencies.js","ducks/currency.js","config.js","App.js","history.js","redux/reducer.js","redux/saga.js","redux/store.js","index.js"],"names":["Header","props","activeCurrencies","saveCurrencies","className","currencyList","ghost","onBack","window","history","back","title","base","subTitle","date","extra","onClick","saveActiveCurrency","key","length","to","type","CurrenciesNameList","getCurrencyData","list","map","item","ActiveCurrency","rates","Object","entries","e","keys","values","Main","this","Component","Panel","Collapse","SavesCurrencies","removeActiveCurrency","saves","onDelItem","currency","JSON","parse","accordion","header","event","stopPropagation","prefix","INIT_CURRENCY_TITLE_LIST_REQUEST","INIT_CURRENCY_TITLE_LIST_SUCCESS","FETCH_NEW_CURRENCY_LIST_REQUEST","FETCH_NEW_CURRENCY_LIST_SUCCESS","SAVE_ACTIVE_CURRENCY_REQUEST","SAVE_ACTIVE_CURRENCY_SUCCESS","REMOVE_SAVED_CURRENCY_REQUEST","LOADING_DATA_SUCCESS","ReducerRecord","Record","isLoading","stateSelector","state","currencyListSelector","createSelector","isLoadingSelector","activeCurrenciesSelector","saveCurrenciesSelector","removeActiveCurrencySaga","take","payload","put","localStorage","removeItem","saveActiveCurrencySaga","select","setItem","stringify","getCurrencyDataSaga","url","axios","get","headers","data","console","log","initCurrencyListSaga","listCurrencies","saga","all","App","initCurrencyList","size","path","render","connect","name","browserHistory","createBrowserHistory","combineReducers","form","router","connectRouter","action","set","rootSaga","currencySaga","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","routerMiddleware","logger","store","createStore","reducer","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9b318d0d.chunk.js","sourcesContent":["import React from 'react'\nimport {PageHeader, Button} from 'antd'\nimport {Link} from 'react-router-dom'\n\nexport const Header = (props) => {\n  const {activeCurrencies, saveCurrencies} = props\n  \n  return (\n    <header className=\"App-header\">\n      {props.currencyList && <PageHeader\n        ghost={false}\n        onBack={() => window.history.back()}\n        title={activeCurrencies ? activeCurrencies.base : \"Currencies list\"}\n        subTitle={props.currencyList.date || activeCurrencies.date}\n        extra={[\n          activeCurrencies && <Button onClick={props.saveActiveCurrency} key=\"3\">Save current currency</Button>,\n          saveCurrencies.length > 0 && <Link to=\"/list\" key=\"1\">\n            <Button type=\"primary\">\n              To Saves list\n            </Button>\n          </Link>,\n        ]}\n      >\n      </PageHeader>}\n    </header>\n  )\n}","import React from 'react'\n\nexport const CurrenciesNameList = (props) => {\n  const {currencyList, getCurrencyData} = props\n  \n  return (\n    <main>\n      {currencyList && currencyList.list && currencyList.list.map((item, key) =>\n        <div onClick={() => getCurrencyData(item)} key={key}>{item}</div>)\n      }\n    </main>\n  )\n}","import React from 'react'\n\nexport const ActiveCurrency = (props) => {\n  const {activeCurrencies, getCurrencyData} = props\n  const rates = Object.entries(activeCurrencies.rates).map(e => ({[e[0]]: e[1]}))\n  \n  return (\n    <main>\n      {rates && rates.map((item, key) =>\n        <div\n          onClick={getCurrencyData ? () => getCurrencyData(Object.keys(item)) : () => false}\n          key={key}\n        >\n          {`${Object.keys(item)} - ${Object.values(item)}`}\n        </div>\n      )}\n    </main>\n  )\n}","import React, {Component} from 'react'\n\nimport {CurrenciesNameList} from './CurrenciesNameList'\nimport {ActiveCurrency} from './ActiveCurrency'\n\nclass Main extends Component {\n  \n  render() {\n    const {activeCurrencies, ...props} = this.props\n    \n    return activeCurrencies ? <ActiveCurrency activeCurrencies={activeCurrencies} {...props}/> :\n          <CurrenciesNameList {...props}/>\n    \n  }\n}\n\nexport default Main","import React, {Component} from 'react'\nimport {ActiveCurrency} from './ActiveCurrency'\nimport {Collapse, Icon} from 'antd'\n\nconst {Panel} = Collapse\n\nconst genExtra = (onDelItem) => (\n  <Icon\n    type=\"delete\"\n    onClick={event => {\n      event.stopPropagation()\n      onDelItem()\n    }}\n  />\n)\n\nclass SavesCurrencies extends Component {\n  \n  render() {\n    const {saveCurrencies, removeActiveCurrency} = this.props\n    const saves = Object.entries(saveCurrencies).map(e => ({[e[0]]: e[1]}))\n    return (\n      <main>\n        {saves && saves.map((item, key) => {\n          const currency = JSON.parse(item[Object.keys(item)])\n          return (\n            <div key={key}>\n              <Collapse accordion>\n                <Panel\n                  header={currency.base + ' - ' + currency.date}\n                  key=\"1\"\n                  extra={genExtra(() => removeActiveCurrency(currency.base))}\n                >\n                  <ActiveCurrency activeCurrencies={currency}/>\n                </Panel>\n              </Collapse>\n            </div>\n          )\n        })}\n      </main>\n    )\n  }\n}\n\nexport default SavesCurrencies","import {appName} from '../config'\nimport {Record} from 'immutable'\nimport {createSelector} from 'reselect'\nimport {all, take, put, select} from 'redux-saga/effects'\nimport axios from 'axios'\n\n/**\n * Constants\n * */\n\nexport const moduleName = 'currency'\nconst prefix = `${appName}/${moduleName}`\n\nexport const INIT_CURRENCY_TITLE_LIST_REQUEST = `${prefix}/INIT_CURRENCY_TITLE_LIST_REQUEST`\nexport const INIT_CURRENCY_TITLE_LIST_SUCCESS = `${prefix}/INIT_CURRENCY_TITLE_LIST_SUCCESS`\n\nexport const FETCH_NEW_CURRENCY_LIST_REQUEST = `${prefix}/FETCH_NEW_CURRENCY_LIST_REQUEST`\nexport const FETCH_NEW_CURRENCY_LIST_SUCCESS = `${prefix}/FETCH_NEW_CURRENCY_LIST_SUCCESS`\n\nexport const SAVE_ACTIVE_CURRENCY_REQUEST = `${prefix}/SAVE_ACTIVE_CURRENCY_REQUEST`\nexport const SAVE_ACTIVE_CURRENCY_SUCCESS = `${prefix}/SAVE_ACTIVE_CURRENCY_SUCCESS`\n\nexport const REMOVE_SAVED_CURRENCY_REQUEST = `${prefix}/REMOVE_SAVED_CURRENCY_REQUEST`\nexport const REMOVE_SAVED_CURRENCY_SUCCESS = `${prefix}/REMOVE_SAVED_CURRENCY_SUCCESS`\n\nexport const LOADING_DATA_SUCCESS = `${prefix}/LOADING_DATA_SUCCESS`\n\n/**\n * Reducer\n * */\n\nexport const ReducerRecord = Record({\n  currencyList: null,\n  activeCurrencies: null,\n  saveCurrencies: [],\n  isLoading: false\n})\n\nexport default function reducer(state = new ReducerRecord(), action) {\n  const {type, payload} = action\n  \n  switch (type) {\n    case INIT_CURRENCY_TITLE_LIST_SUCCESS:\n      return state.set('currencyList', payload)\n    case FETCH_NEW_CURRENCY_LIST_SUCCESS:\n      return state.set('activeCurrencies', payload)\n    case SAVE_ACTIVE_CURRENCY_SUCCESS:\n      return state.set('saveCurrencies', payload)\n    case LOADING_DATA_SUCCESS:\n      return state.set('isLoading', payload)\n    default:\n      return state\n  }\n}\n\n/**\n * Selectors\n * */\n\nexport const stateSelector = state => state[moduleName]\nexport const currencyListSelector = createSelector(stateSelector, state => state.currencyList)\nexport const isLoadingSelector = createSelector(stateSelector, state => state.isLoading)\nexport const activeCurrenciesSelector = createSelector(stateSelector, state => state.activeCurrencies)\nexport const saveCurrenciesSelector = createSelector(stateSelector, state => state.saveCurrencies)\n\n/**\n * Action Creators\n * */\n\nexport function initCurrencyList() {\n  return {\n    type: INIT_CURRENCY_TITLE_LIST_REQUEST\n  }\n}\n\nexport function getCurrencyData(name) {\n  return {\n    type: FETCH_NEW_CURRENCY_LIST_REQUEST,\n    payload: name\n  }\n}\n\nexport function saveActiveCurrency() {\n  return {\n    type: SAVE_ACTIVE_CURRENCY_REQUEST\n  }\n}\n\nexport function removeActiveCurrency(currency) {\n  return {\n    type: REMOVE_SAVED_CURRENCY_REQUEST,\n    payload: currency\n  }\n}\n\n/**\n * Sagas\n * */\n\nexport const removeActiveCurrencySaga = function* () {\n  while (true) {\n    const {payload} = yield take(REMOVE_SAVED_CURRENCY_REQUEST)\n    \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: true\n    })\n    \n    localStorage.removeItem(payload)\n    \n    yield put({\n      type: REMOVE_SAVED_CURRENCY_REQUEST,\n      payload: localStorage\n    })\n    \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: false\n    })\n  }\n}\n\nexport const saveActiveCurrencySaga = function* () {\n  while (true) {\n    yield take(SAVE_ACTIVE_CURRENCY_REQUEST)\n    \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: true\n    })\n    \n    const activeCurrencies = yield select(activeCurrenciesSelector)\n    localStorage.setItem(activeCurrencies.base, JSON.stringify(activeCurrencies))\n    \n    yield put({\n      type: SAVE_ACTIVE_CURRENCY_SUCCESS,\n      payload: localStorage\n    })\n    \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: false\n    })\n  }\n}\n\nexport const getCurrencyDataSaga = function* () {\n  while (true) {\n    const {payload} = yield take(FETCH_NEW_CURRENCY_LIST_REQUEST)\n    const url = `https://api.exchangeratesapi.io/latest?base=${payload}`\n    \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: true\n    })\n    \n    try {\n      const {data} = yield axios.get(url, JSON.stringify({headers: {'Content-Type': 'text/html'}}))\n      \n      yield put({\n        type: FETCH_NEW_CURRENCY_LIST_SUCCESS,\n        payload: data\n      })\n    } catch (err) {\n      console.log(err)\n    } finally {\n      yield put({\n        type: LOADING_DATA_SUCCESS,\n        payload: false\n      })\n    }\n    \n  }\n}\n\nexport const initCurrencyListSaga = function* () {\n  while (true) {\n    yield take(INIT_CURRENCY_TITLE_LIST_REQUEST)\n    const url = `https://api.exchangeratesapi.io/latest`\n  \n    yield put({\n      type: LOADING_DATA_SUCCESS,\n      payload: true\n    })\n    \n    try {\n      const {data} = yield axios.get(url, JSON.stringify({headers: {'Content-Type': 'text/html'}}))\n      const listCurrencies = Object.keys(data.rates)\n      \n      yield put({\n        type: INIT_CURRENCY_TITLE_LIST_SUCCESS,\n        payload: {list: listCurrencies, date: data.date}\n      })\n    } catch (err) {\n      console.log(err)\n    } finally {\n      \n      yield put({\n        type: SAVE_ACTIVE_CURRENCY_SUCCESS,\n        payload: localStorage\n      })\n  \n      yield put({\n        type: LOADING_DATA_SUCCESS,\n        payload: false\n      })\n    }\n    \n  }\n}\n\nexport const saga = function* () {\n  yield all([\n    removeActiveCurrencySaga(),\n    saveActiveCurrencySaga(),\n    initCurrencyListSaga(),\n    getCurrencyDataSaga(),\n  ])\n}","export const appName = 'currency'\n","import React, {Component} from 'react'\nimport './App.scss'\nimport \"antd/dist/antd.css\"\nimport {Route, Switch} from 'react-router-dom'\nimport {connect} from 'react-redux'\nimport { Spin } from 'antd'\n\nimport {Header} from './components/Header'\nimport Main from './components/Main'\nimport SavesCurrencies from './components/SavesCurrencies'\n\nimport {\n  activeCurrenciesSelector,\n  saveCurrenciesSelector,\n  removeActiveCurrency,\n  currencyListSelector,\n  isLoadingSelector,\n  saveActiveCurrency,\n  initCurrencyList,\n  getCurrencyData,\n} from './ducks/currency'\n\nclass App extends Component {\n  \n  constructor(props) {\n    super(props)\n    this.props.initCurrencyList()\n  }\n  \n  render() {\n    const {isLoading, ...props} = this.props\n    \n    return (\n      <div className=\"App\">\n        <Header {...props}/>\n        {isLoading ? <Spin size=\"large\" /> : <Switch>\n          <Route path=\"/list\" render={() => <SavesCurrencies {...props}/>}/>\n          <Route path=\"/\" render={() => <Main {...props}/>}/>\n        </Switch>}\n      </div>\n    )\n  }\n}\n\nexport default connect(state => ({\n  activeCurrencies: activeCurrenciesSelector(state),\n  saveCurrencies: saveCurrenciesSelector(state),\n  currencyList: currencyListSelector(state),\n  isLoading: isLoadingSelector(state),\n}), {\n  removeActiveCurrency,\n  saveActiveCurrency,\n  initCurrencyList,\n  getCurrencyData\n})(App)","import { createBrowserHistory } from 'history'\n\nconst browserHistory = createBrowserHistory()\n\nexport default browserHistory","import {combineReducers} from 'redux'\nimport {connectRouter} from 'connected-react-router'\nimport {reducer as form} from 'redux-form'\nimport history from '../history'\n\nimport currencyReducer, {moduleName as currencyModule} from '../ducks/currency'\n\nexport default combineReducers({\n    form,\n    router: connectRouter(history),\n    [currencyModule]: currencyReducer,\n})","import {all} from 'redux-saga/effects'\nimport {saga as currencySaga} from '../ducks/currency'\n\nexport default function* rootSaga() {\n  yield all([\n    currencySaga()\n  ])\n}","import {createStore, applyMiddleware} from 'redux'\nimport {routerMiddleware} from 'connected-react-router'\nimport logger from 'redux-logger'\nimport createSagaMiddleware from 'redux-saga'\nimport reducer from './reducer'\nimport history from '../history'\nimport rootSaga from './saga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst enhancer = applyMiddleware(sagaMiddleware, routerMiddleware(history), logger)\n\nconst store = createStore(reducer, enhancer)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport {Provider} from 'react-redux'\nimport {ConnectedRouter} from 'connected-react-router'\nimport store from './redux/store'\nimport history from './history'\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App/>\n    </ConnectedRouter>\n  </Provider>, document.getElementById('root'))\n"],"sourceRoot":""}